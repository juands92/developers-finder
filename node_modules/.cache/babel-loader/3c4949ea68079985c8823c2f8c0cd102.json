{"ast":null,"code":"import axios from 'axios';\nimport { getUserData, getRepos } from '../utils/api/github-api';\nimport { GET_GH_PROFILE, LOADING_PROFILE, GET_REPOS, GET_ORGS, UPDATE_USER } from './types'; //Get repositories\n\nexport var getRepositories = function getRepositories(userName) {\n  return function (dispatch) {\n    dispatch(setLoading());\n    getRepos(userName).then(function (res) {\n      return dispatch({\n        type: GET_REPOS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response\n      });\n    });\n  };\n}; //Get profile\n\nexport var getProfile = function getProfile(userName) {\n  return function (dispatch) {\n    dispatch(setLoading());\n    getUserData(userName).then(function (res) {\n      return dispatch({\n        type: GET_GH_PROFILE,\n        payload: res.user\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_GH_PROFILE,\n        payload: {}\n      });\n    });\n  };\n}; //Get profile\n\nexport var getOrganizations = function getOrganizations(userName) {\n  return function (dispatch) {\n    dispatch(setLoading());\n    getUserData(userName).then(function (res) {\n      return dispatch({\n        type: GET_ORGS,\n        payload: res.orgs\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ORGS,\n        payload: []\n      });\n    });\n  };\n};\nexport var updateUserName = function updateUserName(userName) {\n  return {\n    type: UPDATE_USER,\n    payload: userName\n  };\n};\nexport var setLoading = function setLoading() {\n  return {\n    type: LOADING_PROFILE\n  };\n};","map":{"version":3,"sources":["/Users/juandominguez/Desktop/react-interview-project/src/actions/profileActions.js"],"names":["axios","getUserData","getRepos","GET_GH_PROFILE","LOADING_PROFILE","GET_REPOS","GET_ORGS","UPDATE_USER","getRepositories","userName","dispatch","setLoading","then","res","type","payload","data","catch","err","GET_ERRORS","response","getProfile","user","getOrganizations","orgs","updateUserName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,yBAAtC;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,SAA1C,EAAqDC,QAArD,EAA+DC,WAA/D,QAAkF,SAAlF,C,CAGA;;AACA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD;AAAA,SAAc,UAAAC,QAAQ,EAAI;AACrDA,IAAAA,QAAQ,CAACC,UAAU,EAAX,CAAR;AACAT,IAAAA,QAAQ,CAACO,QAAD,CAAR,CACKG,IADL,CACU,UAAAC,GAAG;AAAA,aACLH,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAET,SADD;AAELU,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,OAAD,CADH;AAAA,KADb,EAMMC,KANN,CAMY,UAAAC,GAAG;AAAA,aAAIR,QAAQ,CAAC;AACpBI,QAAAA,IAAI,EAAEK,UADc;AAEpBJ,QAAAA,OAAO,EAAEG,GAAG,CAACE;AAFO,OAAD,CAAZ;AAAA,KANf;AAUH,GAZ8B;AAAA,CAAxB,C,CAeP;;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACZ,QAAD;AAAA,SAAc,UAAAC,QAAQ,EAAI;AAChDA,IAAAA,QAAQ,CAACC,UAAU,EAAX,CAAR;AACAV,IAAAA,WAAW,CAACQ,QAAD,CAAX,CACKG,IADL,CACU,UAAAC,GAAG;AAAA,aACLH,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEX,cADD;AAELY,QAAAA,OAAO,EAAEF,GAAG,CAACS;AAFR,OAAD,CADH;AAAA,KADb,EAMML,KANN,CAMY,UAAAC,GAAG;AAAA,aAAIR,QAAQ,CAAC;AACpBI,QAAAA,IAAI,EAAEX,cADc;AAEpBY,QAAAA,OAAO,EAAE;AAFW,OAAD,CAAZ;AAAA,KANf;AAUH,GAZyB;AAAA,CAAnB,C,CAcP;;AACA,OAAO,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACd,QAAD;AAAA,SAAc,UAAAC,QAAQ,EAAI;AACtDA,IAAAA,QAAQ,CAACC,UAAU,EAAX,CAAR;AACAV,IAAAA,WAAW,CAACQ,QAAD,CAAX,CACKG,IADL,CACU,UAAAC,GAAG;AAAA,aACLH,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAER,QADD;AAELS,QAAAA,OAAO,EAAEF,GAAG,CAACW;AAFR,OAAD,CADH;AAAA,KADb,EAMMP,KANN,CAMY,UAAAC,GAAG;AAAA,aAAIR,QAAQ,CAAC;AACpBI,QAAAA,IAAI,EAAER,QADc;AAEpBS,QAAAA,OAAO,EAAE;AAFW,OAAD,CAAZ;AAAA,KANf;AAUH,GAZ+B;AAAA,CAAzB;AAeP,OAAO,IAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAAAhB,QAAQ;AAAA,SAAK;AACvCK,IAAAA,IAAI,EAAEP,WADiC;AAEvCQ,IAAAA,OAAO,EAAEN;AAF8B,GAAL;AAAA,CAA/B;AAMP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC5B,SAAO;AACHG,IAAAA,IAAI,EAAEV;AADH,GAAP;AAGH,CAJM","sourcesContent":["import axios from 'axios';\r\nimport { getUserData, getRepos } from '../utils/api/github-api';\r\nimport { GET_GH_PROFILE, LOADING_PROFILE, GET_REPOS, GET_ORGS, UPDATE_USER } from './types';\r\n\r\n\r\n//Get repositories\r\nexport const getRepositories = (userName) => dispatch => {\r\n    dispatch(setLoading());\r\n    getRepos(userName)\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_REPOS,\r\n                payload: res.data\r\n            })\r\n        ).catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response\r\n        }));\r\n}\r\n\r\n\r\n//Get profile\r\nexport const getProfile = (userName) => dispatch => {\r\n    dispatch(setLoading());\r\n    getUserData(userName)\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_GH_PROFILE,\r\n                payload: res.user\r\n            })\r\n        ).catch(err => dispatch({\r\n            type: GET_GH_PROFILE,\r\n            payload: {}\r\n        }));\r\n}\r\n\r\n//Get profile\r\nexport const getOrganizations = (userName) => dispatch => {\r\n    dispatch(setLoading());\r\n    getUserData(userName)\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_ORGS,\r\n                payload: res.orgs\r\n            })\r\n        ).catch(err => dispatch({\r\n            type: GET_ORGS,\r\n            payload: []\r\n        }));\r\n}\r\n\r\n\r\nexport const updateUserName = userName => ({\r\n    type: UPDATE_USER, \r\n    payload: userName\r\n});\r\n\r\n\r\nexport const setLoading = () => {\r\n    return {\r\n        type: LOADING_PROFILE\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}