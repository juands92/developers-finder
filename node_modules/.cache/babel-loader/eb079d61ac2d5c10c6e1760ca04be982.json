{"ast":null,"code":"import _classCallCheck from \"/Users/juandominguez/Desktop/react-interview-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/juandominguez/Desktop/react-interview-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/juandominguez/Desktop/react-interview-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/juandominguez/Desktop/react-interview-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/juandominguez/Desktop/react-interview-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/juandominguez/Desktop/react-interview-project/src/components/profile/Organizations.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../../utils/Spinner';\nimport { getOrganizations } from '../../actions/profileActions';\n\nvar Organizations =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Organizations, _Component);\n\n  function Organizations() {\n    _classCallCheck(this, Organizations);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Organizations).apply(this, arguments));\n  }\n\n  _createClass(Organizations, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userName = this.props.profile.userName;\n      this.props.getOrganizations(userName);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$profile = this.props.profile,\n          userName = _this$props$profile.userName,\n          orgs = _this$props$profile.orgs,\n          loading = _this$props$profile.loading;\n      console.log(orgs);\n      var listOfOrgs;\n\n      if (loading) {\n        listOfOrgs = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      } else {\n        listOfOrgs = orgs.map(function (org) {\n          return React.createElement(\"div\", {\n            className: \"col-sm-6 mb-2\",\n            key: org.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-body\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"text-center mb-4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            width: \"200\",\n            height: \"200\",\n            src: org.avatar_url,\n            alt: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          })), React.createElement(\"h5\", {\n            className: \"card-title text-info text-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, org.login), React.createElement(\"p\", {\n            className: \"text-center card-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, org.description))));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"mb-4 mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, userName, \" 's Organizations\"), React.createElement(Link, {\n        to: \"/profile\",\n        className: \"navbar-brand\",\n        style: {\n          color: '#17a2b8'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"far fa-hand-point-left fa-2x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, listOfOrgs)))));\n    }\n  }]);\n\n  return Organizations;\n}(Component);\n\nOrganizations.propTypes = {\n  getOrganizations: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getOrganizations: getOrganizations\n})(Organizations);","map":{"version":3,"sources":["/Users/juandominguez/Desktop/react-interview-project/src/components/profile/Organizations.js"],"names":["React","Component","connect","PropTypes","Link","Spinner","getOrganizations","Organizations","userName","props","profile","orgs","loading","console","log","listOfOrgs","map","org","id","avatar_url","login","description","color","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Spinner from '../../utils/Spinner';\r\n\r\nimport { getOrganizations } from '../../actions/profileActions';\r\n\r\nclass Organizations extends Component {\r\n\r\n    componentDidMount() {\r\n        const { userName } = this.props.profile;\r\n        this.props.getOrganizations(userName);\r\n    }\r\n\r\n    render() {\r\n        const { userName, orgs, loading } = this.props.profile;\r\n        console.log(orgs);\r\n        let listOfOrgs;\r\n        if (loading) {\r\n            listOfOrgs = <Spinner />\r\n        } else {\r\n            listOfOrgs = orgs.map(org => (\r\n                <div className=\"col-sm-6 mb-2\" key={org.id}>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"text-center mb-4\">\r\n                                <img\r\n                                    width=\"200\"\r\n                                    height=\"200\"\r\n                                    src={org.avatar_url}\r\n                                    alt=\"\" />\r\n                            </div>\r\n                            <h5 className=\"card-title text-info text-center\">\r\n                                {org.login}\r\n                            </h5>\r\n                            <p className=\"text-center card-text\">{org.description}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"profile\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h2 className=\"mb-4 mt-4\">{userName} 's Organizations</h2>\r\n                            <Link to=\"/profile\" className=\"navbar-brand\" style={{ color: '#17a2b8' }}>\r\n                                <i class=\"far fa-hand-point-left fa-2x\"></i>\r\n                            </Link>\r\n                            <div className=\"row\">\r\n                                {listOfOrgs}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nOrganizations.propTypes = {\r\n    getOrganizations: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getOrganizations })(Organizations);"]},"metadata":{},"sourceType":"module"}