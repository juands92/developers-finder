{"ast":null,"code":"import _classCallCheck from \"/Users/juandominguez/Desktop/react-interview-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/juandominguez/Desktop/react-interview-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/juandominguez/Desktop/react-interview-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/juandominguez/Desktop/react-interview-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/juandominguez/Desktop/react-interview-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/juandominguez/Desktop/react-interview-project/src/components/profile/Profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Github from './Github';\nimport Spinner from '../../utils/Spinner';\nimport { getProfile, getRepos } from '../../actions/profileActions';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    _classCallCheck(this, Profile);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Profile).apply(this, arguments));\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userName = this.props.profile.userName;\n      console.log(\"userName\", userName);\n      this.props.getProfile(userName);\n      this.props.getRepos(userName);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$profile = this.props.profile,\n          profile = _this$props$profile.profile,\n          repos = _this$props$profile.repos,\n          loading = _this$props$profile.loading;\n      var profileContent;\n\n      if (loading) {\n        profileContent = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      } else {\n        profile.login !== \"undefined\" ? profileContent = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(Header, {\n          profile: profile,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), React.createElement(Github, {\n          repos: repos,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        })) : //Profile is undefined. Back to search page\n        this.props.history.push(\"/\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, profileContent))));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nProfile.propTypes = {\n  getProfile: PropTypes.func.isRequired,\n  getRepos: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfile: getProfile,\n  getRepos: getRepos\n})(Profile);","map":{"version":3,"sources":["/Users/juandominguez/Desktop/react-interview-project/src/components/profile/Profile.js"],"names":["React","Component","connect","PropTypes","Header","Github","Spinner","getProfile","getRepos","Profile","userName","props","profile","console","log","repos","loading","profileContent","login","history","push","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,8BAArC;;IAGMC,O;;;;;;;;;;;;;wCAEkB;AAAA,UACRC,QADQ,GACK,KAAKC,KAAL,CAAWC,OADhB,CACRF,QADQ;AAEhBG,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,QAAxB;AACA,WAAKC,KAAL,CAAWJ,UAAX,CAAsBG,QAAtB;AACA,WAAKC,KAAL,CAAWH,QAAX,CAAoBE,QAApB;AACH;;;6BAEQ;AAAA,gCAE+B,KAAKC,KAAL,CAAWC,OAF1C;AAAA,UAEGA,OAFH,uBAEGA,OAFH;AAAA,UAEYG,KAFZ,uBAEYA,KAFZ;AAAA,UAEmBC,OAFnB,uBAEmBA,OAFnB;AAGL,UAAIC,cAAJ;;AAEA,UAAID,OAAJ,EAAa;AACTC,QAAAA,cAAc,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AACH,OAFD,MAGK;AACDL,QAAAA,OAAO,CAACM,KAAR,KAAkB,WAAlB,GACID,cAAc,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAEL,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAEG,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CAFR,GAMS;AACL,aAAKJ,KAAL,CAAWQ,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,CAPJ;AAQH;;AACD,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,cADL,CADJ,CADJ,CADJ,CADJ;AAWH;;;;EAtCiBhB,S;;AA0CtBQ,OAAO,CAACY,SAAR,GAAoB;AAChBd,EAAAA,UAAU,EAAEJ,SAAS,CAACmB,IAAV,CAAeC,UADX;AAEhBf,EAAAA,QAAQ,EAAEL,SAAS,CAACmB,IAAV,CAAeC,UAFT;AAGhBX,EAAAA,OAAO,EAAET,SAAS,CAACqB,MAAV,CAAiBD;AAHV,CAApB;;AAMA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9Bd,IAAAA,OAAO,EAAEc,KAAK,CAACd;AADe,GAAL;AAAA,CAA7B;;AAIA,eAAeV,OAAO,CAACuB,eAAD,EAAkB;AAAElB,EAAAA,UAAU,EAAVA,UAAF;AAAcC,EAAAA,QAAQ,EAARA;AAAd,CAAlB,CAAP,CAAmDC,OAAnD,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport Header from './Header';\r\nimport Github from './Github';\r\nimport Spinner from '../../utils/Spinner';\r\n\r\nimport { getProfile, getRepos } from '../../actions/profileActions';\r\n\r\n\r\nclass Profile extends Component {\r\n\r\n    componentDidMount() {\r\n        const { userName } = this.props.profile;\r\n        console.log(\"userName\", userName)\r\n        this.props.getProfile(userName);\r\n        this.props.getRepos(userName);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { profile, repos, loading } = this.props.profile;\r\n        let profileContent;\r\n\r\n        if (loading) {\r\n            profileContent = <Spinner />\r\n        }\r\n        else {\r\n            profile.login !== \"undefined\" ? (\r\n                profileContent = (\r\n                    <div>\r\n                        <Header profile={profile} />\r\n                        <Github repos={repos} />\r\n                    </div>\r\n                )) : //Profile is undefined. Back to search page\r\n                this.props.history.push(\"/\");\r\n        }\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            {profileContent}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nProfile.propTypes = {\r\n    getProfile: PropTypes.func.isRequired,\r\n    getRepos: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfile, getRepos })(Profile);"]},"metadata":{},"sourceType":"module"}